/**
 * Frontpage Editor Create snippet
 *
 * @author    S. Hamblett <steve.hamblett@linux.com>
 * @copyright 2010 S. Hamblett
 * @license   GPLv3 http://www.gnu.org/licenses/gpl.html
 */


/* Load the lexicon */
$modx->lexicon->load('frontpage:default');

/* Check if we have entered from the save button */
if ( isset($_POST['save'])) {

$docId = $modx->documentIdentifier;

/* Ok, save the document fields */
$source = $_POST['source'];
$sourceDoc = $modx->getObject('modResource',
                              array('id' => $source));
if ( !$sourceDoc ) {

   $modx->setPlaceholder('fp.error_message', $modx->lexicon('nosuchdocument'));
   return;
}

$sourceDoc->set('pagetitle', $_POST['title']);
$sourceDoc->set('longtitle', $_POST['longtitle']);
$sourceDoc->set('description', $_POST['description']);
$sourceDoc->set('alias', $_POST['alias']);
$sourceDoc->set('introtext', $_POST['summary']);
$sourceDoc->set('menutitle', $_POST['menutitle']);
$sourceDoc->set('menuindex', $_POST['menuindex']);
$hidemenu = 0;
if ( isset($_POST['hidemenus']) ) $hidemenu = 1;
$sourceDoc->set('hidemenu', $hidemenu);
$publish = 0;
if ( isset($_POST['publish']) ) $publish = 1;
$sourceDoc->set('published', $publish);
$folder = 0;
if ( isset($_POST['folder']) ) $folder = 1;
$sourceDoc->set('isfolder', $folder);

/* Content with tags closed up again */
$content = str_replace('[ [', '[[', $_POST['formcontent']);
$sourceDoc->set('content', $content);

/* Save it */
$success = $sourceDoc->save();
if ( $success === false ) {
   $modx->setPlaceholder('fp.error_message', $modx->lexicon('cantsave'));
   return;
}

/* Redirect to ourselves to redraw the page */
$url = $modx->makeURL($docId);
$url .= "&frontpage=1&source=$source&parent=-1";
$modx->sendRedirect($url);

}

/* Call from the Create button or refresh from save, get the parameters */
$source = $_REQUEST['source'];
$parent = $_REQUEST['parent'];

/* If parent is not -1 this is a create, otherwise a refresh from save */
if ( $parent != -1 ) {

/* Create a document */
$newDoc = $modx->newObject('modResource');

if ( !$newDoc ) {

   $modx->setPlaceholder('fp.error_message', $modx->lexicon('cantcreate'));
   return;
}

/* Get the parent document template */
$templateToUse = 0;

if ( $parent != 0 ) {

$parentDoc = $modx->getObject('modResource', array('id' => $parent));
if ( !$parentDoc ) {

   $modx->setPlaceholder('fp.error_message', $modx->lexicon('cantgetparent'));
   return;
}

$templateToUse = $parentDoc->get('template');

}

/* Set default document parameters from the parent */
if ( $parent != 0 ) {

  $newDoc->set('context_key', $parentDoc->get('context_key'));
  $newDoc->set('richtext', $parentDoc->get('richtext'));

} else {

   $newDoc->set('context_key', 'web');

}

/* Get the kind of template we are using */
$templateSetting = $modx->getObject('modSystemSetting',
                                    array('key' => 'default_template',
                                    'namespace' => 'frontpage'));
if ( !$templateSetting ) {

    $newDoc->set('template', $templateToUse);

} else {

   $template = $templateSetting->get('value');
   if ( $template == 'parent' ) {

       $newDoc->set('template', $templateToUse);

    } else {

       $newDoc->set('template', $template);
    }

}

/* Parent */
$newDoc->set('parent', $parent);

/* Save the new document */
$success = $newDoc->save();
if ( $success === false ) {

   $modx->setPlaceholder('fp.error_message', $modx->lexicon('cantsave'));
   return;
}

/* Resource groups */
if ( $parent != 0 ) {

$parentResourceGroups = $modx->getCollection('modResourceGroupResource',
                        array('document' => $parent));

foreach ( $parentResourceGroups as $parentResourceGroup ) {

     $resourceGroup = $parentResourceGroup->get('document_group');
     $newResourceGroup = $modx->newObject('modResourceGroupResource',
                                           array('document' => $newDoc->get('id'),
                                                 'document_group' => $resourceGroup));
     $newResourceGroup->save();
}

}

/* Set the source document to the new one */
$source = $newDoc->get('id');
$sourceDoc = $newDoc;

} else {

$sourceDoc = $modx->getObject('modResource',
                              array('id' => $source));
if ( !$sourceDoc ) {

   $modx->setPlaceholder('fp.error_message', $modx->lexicon('nosuchdocument'));
   return;
}

} // Create or refresh

/* Set the place holders */
$modx->setPlaceholder('fp.source', $source);
$modx->setPlaceholder('fp.titlelabel', $modx->lexicon('titlelabel'));
$modx->setPlaceholder('fp.title', $sourceDoc->get('pagetitle'));
$modx->setPlaceholder('fp.longtitlelabel', $modx->lexicon('longtitlelabel'));
$modx->setPlaceholder('fp.longtitle', $sourceDoc->get('longtitle'));
$modx->setPlaceholder('fp.descriptionlabel', $modx->lexicon('descriptionlabel'));
$modx->setPlaceholder('fp.description', $sourceDoc->get('description'));
$modx->setPlaceholder('fp.aliaslabel', $modx->lexicon('aliaslabel'));
$modx->setPlaceholder('fp.alias', $sourceDoc->get('alias'));
$modx->setPlaceholder('fp.summarylabel', $modx->lexicon('summarylabel'));
$modx->setPlaceholder('fp.summary', $sourceDoc->get('introtext'));
$modx->setPlaceholder('fp.menutitlelabel', $modx->lexicon('menutitlelabel'));
$modx->setPlaceholder('fp.menutitle', $sourceDoc->get('menutitle'));
$modx->setPlaceholder('fp.menuindexlabel', $modx->lexicon('menuindexlabel'));
$modx->setPlaceholder('fp.menuindex', $sourceDoc->get('menuindex'));
$modx->setPlaceholder('fp.hidemenulabel', $modx->lexicon('hidemenulabel'));
if ( $sourceDoc->get('hidemenu') == 1 ) $modx->setPlaceholder('fp.hidemenuscheck', "checked");
$modx->setPlaceholder('fp.publishlabel', $modx->lexicon('publishlabel'));
if ( $sourceDoc->get('published') == 1 ) $modx->setPlaceholder('fp.publishcheck', "checked");
$modx->setPlaceholder('fp.folderlabel', $modx->lexicon('folderlabel'));
if ( $sourceDoc->get('isfolder') == 1 ) $modx->setPlaceholder('fp.foldercheck', "checked");
$modx->setPlaceholder('fp.savebuttonlabel', $modx->lexicon('savebuttonlabel'));

/* Content with tags opened */
$content = str_replace('[[', '[ [', $sourceDoc->get('content'));
$modx->setPlaceholder('fp.formcontent', $content);

return;
